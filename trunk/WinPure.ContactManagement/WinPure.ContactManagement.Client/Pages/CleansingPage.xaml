<CommonControls:PageControl xmlns:Cleansing="clr-namespace:WinPure.ContactManagement.Client.ViewModels.Cleansing;assembly=WinPure.ContactManagement.Client.ViewModels"
                            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
                            xmlns:CommonControls="clr-namespace:WinPure.ContactManagement.Client.CommonControls;assembly=WinPure.ContactManagement.Client.CommonControls"
                            xmlns:WinPure_ContactManagement_Client_Helpers_Converters="clr-namespace:WinPure.ContactManagement.Client.Helpers.Converters"                            
                            xmlns:loc="clr-namespace:WinPure.ContactManagement.Client.Localization;assembly=WinPure.ContactManagement.Client.Localization"
                            x:Class="WinPure.ContactManagement.Client.Pages.CleansingPage"
                            d:DesignHeight="598" d:DesignWidth="1048"
							BorderColor="#FF373737"
                            
                            loc:Translate.Uid="CleansingPage"
                            Text="{loc:Translate Cleansing}"
                            
                            mc:Ignorable="d">
	
<!-- Page Resources -->
<CommonControls:PageControl.Resources>
	<LinearGradientBrush x:Key="TabGridBackground" EndPoint="0.5,1" StartPoint="0.5,0">
      <GradientStop Offset="0"/>
      <GradientStop Color="#12FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <WinPure_ContactManagement_Client_Helpers_Converters:BooleanToVisibilityOppositeConverter x:Key="BooleanToVisibilityOppositeConverter"/>
</CommonControls:PageControl.Resources>
	
<!--Page Background-->
<CommonControls:PageControl.Background>
    <LinearGradientBrush EndPoint="0.5,1"
                         StartPoint="0.5,0">
      <GradientStop Color="#FFA436D6"
                    Offset="0" />
      <GradientStop Color="#FF691685"
                    Offset="1" />
    </LinearGradientBrush>
  </CommonControls:PageControl.Background>
  
    <Grid x:Name="LayoutRoot" Background="{DynamicResource PageBackgroundGradient}">
    	
    	<TabControl x:Name="CleansingTabControl"
		            FontSize="16"
					TabStripPlacement="Left"
					Background="{x:Null}"
					BorderBrush="{x:Null}"
					Padding="0">
    		
            <!-- Statistics Tab Item -->
			<TabItem x:Name="StatisticsTabItem"
			         
					 loc:Translate.Uid="StatisticsTab"
					 Header="{loc:Translate Statistics}"
					 
					 Style="{DynamicResource TabItemStyle}" Margin="0"
                     Height="40" Width="200" FontSize="21.333" Foreground="White">

                <TabItem.DataContext>
                    <Cleansing:StatisticsViewModel />
                </TabItem.DataContext>

                <Grid x:Name="StatisticsTabGrid" Background="{DynamicResource TabGridBackground}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.8*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    
                    <!-- First row --> 
                    <Grid Margin="8,5,8,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
						
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

                        <TextBlock Text="Columns:" FontSize="18.667" Grid.Column="0"
							       Grid.Row="0" />
                         <ListBox ItemsSource="{Binding Columns}" 
							      FontSize="18.667" 
							      SelectionMode="Multiple"
							      Style="{DynamicResource ListBoxStyle}"
								  Grid.Column="0"
								  Grid.Row="1">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding ColumnsSelectionChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                         </ListBox>

                        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">

                            <Button Content="&lt;" Height="26" Width="56" 
					                Command="{Binding MoveFromSelectedColumnsToColumns}"
							        Style="{DynamicResource ButtonStyle1}" Foreground="White" 
                                    FontSize="16" Cursor="Hand" />

                            <Button Content="&gt;" Height="26" Width="56" 
					                Command="{Binding MoveFromColumnsToSelectedColumns}"
							        Style="{DynamicResource ButtonStyle1}" Foreground="White" 
                                    FontSize="16" Cursor="Hand"/>

                            <Button Content="&lt;&lt;" Width="56" Height="26" 
							        Command="{Binding MoveAllFromSelectedColumnsToColumns}"
							        Style="{DynamicResource ButtonStyle1}" Foreground="White" 
                                    FontSize="16" Cursor="Hand" Margin="0,60,0,0" />
                            
                            <Button Content="&gt;&gt;" Width="56"  Height="26"
					                Command="{Binding MoveAllFromColumnsToSelectedColumns}"
							        Style="{DynamicResource ButtonStyle1}" Foreground="White" 
                                    FontSize="16" Cursor="Hand" />
                        </StackPanel>

                        <TextBlock Text="Selected Columns:" FontSize="18.667" Grid.Column="2" Grid.Row="0" />
                        <ListBox ItemsSource="{Binding SelectedColumns}" 
							     FontSize="18.667"
							     SelectionMode="Multiple"
							     Style="{DynamicResource ListBoxStyle}"
								 Grid.Column="2" Grid.Row="1">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding SelectedColumnsSelectionChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                        </ListBox>

                        <Grid Grid.Column="3" Grid.Row="1">
                        	
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							
                            <DataGrid AutoGenerateColumns="False" FontSize="16" ItemsSource="{Binding ColumnsScore}" 
					                  SelectionMode="Single" GridLinesVisibility="None" IsReadOnly="True" 
									  Margin="5,0,0,0" Grid.Row="0">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding DataGridDoubleClick}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Column Name" Binding="{Binding Name}" Width="160"/>
                                    <DataGridTextColumn Header="Score" Binding="{Binding PercentedScore}" Width="80"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock Text="{Binding TotalScore}" FontSize="18.667" Margin="5,0,0,0"
							           Grid.Row="1" Height="{Binding TotalScoreHeight}" />
                        </Grid>
                    </Grid>
                    
                    <!-- Second row -->
                    <GridSplitter Grid.Row="1" Height="7" Width="200" Background="Black" Opacity="0.3"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                  Margin="8,5,8,0" />

                    <!-- Third row -->
					<Grid Grid.Row="2" Margin="8,5,5,8">
						
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						
						<StackPanel Orientation="Horizontal"					            
								    HorizontalAlignment="Center"
									Grid.Row="0">

                        <TextBlock Text="Chart Type: "
						           Foreground="White" FontSize="18.667" />

                        <ComboBox SelectedIndex="{Binding ChartType}" FontSize="18.667">
                            <TextBlock Text="3D Bar Chart" />
                            <TextBlock Text="2D Bar Chart" />
                            <TextBlock Text="2D Line Chart" />
                        </ComboBox>

                        <ComboBox FontSize="18.667" SelectedIndex="{Binding CellsOption}" Margin="7,0,0,0">
                            <TextBlock Text="Populated Cells" />
                            <TextBlock Text="Empty Cells" />
                        </ComboBox>

                        <Button Content="Refresh" Command="{Binding RefreshButtonClick}"
						        Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="18.667" 
                                Cursor="Hand" Margin="10,0,0,0" Width="80" />

                    </StackPanel>
					
                    <TabControl Background="{x:Null}"
					            BorderBrush="{x:Null}"
					            Padding="0"
								SelectedIndex="{Binding DataTabControlSelectedTab}"
								Grid.Row="1">

                        <TabItem loc:Translate.Uid="StatisticsTab"
					             Header="{loc:Translate Statistics}"
					 
					             Style="{DynamicResource TabItemStyle}"
								 FontSize="15"
								 Foreground="White" Visibility="{Binding DataTabItemVisibility}"
								 Content="{Binding ChartControl}">

                        </TabItem>

                        <TabItem loc:Translate.Uid="DataTab"
					             Header="{loc:Translate Data}"
					 
					             Style="{DynamicResource TabItemStyle}"
								 FontSize="15"
								 Foreground="White" Visibility="{Binding DataTabItemVisibility}">

                            <DataGrid AutoGenerateColumns="False" HorizontalScrollBarVisibility="Auto" 
                                      ItemsSource="{Binding FilteredContacts}">
                                <DataGrid.RowBackground>
                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE2D00A" Offset="0.745"/>
                                        <GradientStop Color="#FFF3EB8B" Offset="0.339"/>
                                    </LinearGradientBrush>
                                </DataGrid.RowBackground>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Title" Binding="{Binding Title}"/>
                                    <DataGridTextColumn Header="FirstName" Binding="{Binding FirstName}" />
                                    <DataGridTextColumn Header="MiddleName" Binding="{Binding MiddleName}" />
                                    <DataGridTextColumn Header="LastName" Binding="{Binding LastName}"/>
                                    <DataGridTextColumn Header="Suffix" Binding="{Binding Suffix}"/>
                                    <DataGridTextColumn Header="JobTitle" Binding="{Binding JobTitle}"/>
                                    <DataGridTextColumn Header="Telephone" Binding="{Binding Telephone}"/>
                                    <DataGridTextColumn Header="Fax" Binding="{Binding Fax}"/>
                                    <DataGridTextColumn Header="Mobile" Binding="{Binding Mobile}"/>
                                    <DataGridTextColumn Header="HomeTelephone" Binding="{Binding HomeTelephone}"/>
                                    <DataGridTextColumn Header="WebSite" Binding="{Binding WebSite}"/>
                                    <DataGridTextColumn Header="EmailAddress1" Binding="{Binding EmailAddress1}"/>
                                    <DataGridTextColumn Header="EmailAddress2" Binding="{Binding EmailAddress2}"/>
                                    <DataGridTextColumn Header="EmailAddress" Binding="{Binding EmailAddress}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                        </TabItem>

                    </TabControl>
						
					</Grid>

                </Grid>

            </TabItem>

            <!-- Case Conversion Tab Item -->
            <TabItem x:Name="CaseConversionTabItem"
			         
					 loc:Translate.Uid="CaseConversionTab"
					 Header="{loc:Translate Case Conversion}"
					 
					 Style="{DynamicResource TabItemStyle}" Margin="0"
                     Height="40" Width="200" FontSize="21.333" Foreground="White">

                <TabItem.DataContext>
                    <Cleansing:CaseConversionViewModel />
                </TabItem.DataContext>

                <Grid x:Name="CaseConversionTabGrid" Background="{DynamicResource TabGridBackground}">
					
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					
					<TextBlock Text="Columns:" FontSize="18.667" Grid.Row="0" Padding="8,5,0,0" />

                    <Grid Grid.Row="1"
                          Margin="7,0,0,0">
                    	
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>						
                        
                        <ListBox ItemsSource="{Binding Columns}"
                                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                                 FontSize="18.667"
								 Grid.Column="0"
								 Style="{DynamicResource ListBoxStyle}"
								 Margin="0,0,3,0">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <cmd:EventToCommand PassEventArgsToCommand="False"
                                                    Command="{Binding ColumnSelectionChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </ListBox>     
						
						<Grid Grid.Column="1">
						
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						
						<DataGrid ItemsSource="{Binding AllValuesDataTable}" FontSize="18.667"
						          Grid.Row="0" Margin="3,0,8,0" />
                        <TextBlock FontSize="18.667" Text="{Binding DistinctValues}" HorizontalAlignment="Center"
						           Grid.Row="1" Height="{Binding DistinctValuesHeight}" />
						
					    </Grid>                  
                    </Grid>

                    <StackPanel Grid.Row="2"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Orientation="Vertical">
                        <StackPanel Orientation="Horizontal"
                                    Margin="0,0,0,10">
                            <Button Content="to lower case" Command="{Binding ConvertToLowerCase}" Margin="15, 0, 0, 0"
							    Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand" 
								Height="42.616"
                                IsEnabled="{Binding IsLowerCaseButtonEnabled}" />
                            <Button Content="TO UPPER CASE" Command="{Binding ConvertToUpperCase}" Margin="15, 0, 0, 0"
							    Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand" 
								Height="42.616"
                                IsEnabled="{Binding IsUpperCaseButtonEnabled}" />
                            <Button Content="To Proper Case" Command="{Binding ConvertToProperCase}" Margin="15, 0, 0, 0"
							    Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand" 
								Height="42.616"
                                IsEnabled="{Binding IsProperCaseButtonEnabled}" />
                        </StackPanel>
                        
                    </StackPanel>
					<Grid x:Name="LoadingPanel"
                              Background="Transparent"
                              Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityOppositeConverter}, Mode=OneWay}" 
                              d:IsHidden="True"
							  Grid.RowSpan="3">
                            <CommonControls:ProgressControl Text="{Binding BusyMessage}" IsSystemModal="True"/>
                    </Grid>
                </Grid>

            </TabItem>

            <!-- Deduplication tab item -->
            <TabItem x:Name="DeduplicationTabItem"
			         
					 loc:Translate.Uid="DeduplicationTab"
					 Header="{loc:Translate Deduplication}"
					 
					 Style="{DynamicResource TabItemStyle}" Margin="0"
                     Height="40" Width="200" FontSize="21.333" Foreground="White">

                <TabItem.DataContext>
                    <Cleansing:DeduplicationViewModel />
                </TabItem.DataContext>

                <Grid x:Name="DeduplicationTabGrid" Background="{DynamicResource TabGridBackground}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="175" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Vertical" Grid.Column="0">
                            <TextBlock Text="All Columns:" FontSize="18" />
                            <ListBox 
					         ItemsSource="{Binding Columns}" 
							 FontSize="14" 
							 SelectionMode="Multiple"
							 Style="{DynamicResource ListBoxStyle}"
							 Height="170">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding ColumnsSelectionChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </ListBox>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Grid.Column="1">

                            <Button Content="&lt;" Height="26" Width="56" 
					        Command="{Binding MoveFromSelectedColumnsToColumns}"
							Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand" Margin="0,20,0,0"/>

                            <Button Content="&gt;" Height="26" Width="56" 
					        Command="{Binding MoveFromColumnsToSelectedColumns}"
							Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand"/>

                            <Button Content="&lt;&lt;" Width="56" Height="26" 
							Command="{Binding MoveAllFromSelectedColumnsToColumns}"
							Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand" Margin="0,60,0,0"/>
                            <Button Content="&gt;&gt;" Width="56"  Height="26"
					        Command="{Binding MoveAllFromColumnsToSelectedColumns}"
							Style="{DynamicResource ButtonStyle1}" Foreground="White" FontSize="16" Cursor="Hand"/>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Grid.Column="2">
                            <TextBlock Text="Search Columns:" FontSize="18" />
                            <ListBox 
					         ItemsSource="{Binding SelectedColumns}" 
							 FontSize="14"
							 SelectionMode="Multiple"
							 Style="{DynamicResource ListBoxStyle}"
							 Height="170">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding SelectedColumnsSelectionChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </ListBox>
                        </StackPanel>

                        <StackPanel Grid.Column="3"
					                Orientation="Vertical"
                                    Margin="15,0,0,0">
                            <TextBlock Text="Fuzzy Threshold Level"
						               FontSize="16"
                                     HorizontalAlignment="Center" />
                            <Slider Orientation="Horizontal"
                                    Minimum="1" Maximum="100"
                                    Width="350"
                                    Value="{Binding ThresholdLevel, Mode=TwoWay}" />
                            <TextBlock HorizontalAlignment="Center"
                                       FontSize="16"
                                       Text="{Binding ThresholdLevel}" />
                            <Button Content="Find Duplications" Style="{DynamicResource ButtonStyle1}" 
                                    Foreground="White" Width="190" Height="40" FontSize="16" Cursor="Hand"
                                    Command="{Binding FindDuplicatesBtnClick}" />
                        </StackPanel>

                    </Grid>

                    <TextBlock Text="{Binding TotalDuplicates}"
						       FontSize="16"
                               Grid.Row="1" />

                    <DataGrid ItemsSource="{Binding DedupTable}"
                              FontSize="12"
                              AutoGenerateColumns="False"
                              Grid.Row="2" 
                              SelectedIndex="{Binding DataSelectedIndex, Mode=TwoWay}">

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Hide">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Hide" Command="{Binding DataContext.HideBtnClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Merge">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Merge" Command="{Binding DataContext.MergeBtnClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Delete">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete" Command="{Binding DataContext.DeleteBtnClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Title" Binding="{Binding Title}"/>
                            <DataGridTextColumn Header="FirstName" Binding="{Binding FirstName}" />
                            <DataGridTextColumn Header="MiddleName" Binding="{Binding MiddleName}" />
                            <DataGridTextColumn Header="LastName" Binding="{Binding LastName}"/>
                            <DataGridTextColumn Header="Suffix" Binding="{Binding Suffix}"/>
                            <DataGridTextColumn Header="JobTitle" Binding="{Binding JobTitle}"/>
                            <DataGridTextColumn Header="Telephone" Binding="{Binding Telephone}"/>
                            <DataGridTextColumn Header="Fax" Binding="{Binding Fax}"/>
                            <DataGridTextColumn Header="Mobile" Binding="{Binding Mobile}"/>
                            <DataGridTextColumn Header="HomeTelephone" Binding="{Binding HomeTelephone}"/>
                            <DataGridTextColumn Header="WebSite" Binding="{Binding Website}"/>
                            <DataGridTextColumn Header="EmailAddress1" Binding="{Binding EmailAddress1}"/>
                            <DataGridTextColumn Header="EmailAddress2" Binding="{Binding EmailAddress2}"/>
                            <DataGridTextColumn Header="EmailAddress" Binding="{Binding EmailAddress}"/>
                        </DataGrid.Columns>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LoadingRow">
                                <cmd:EventToCommand PassEventArgsToCommand="True"
                                                    Command="{Binding OnLoadingRow}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </DataGrid>

                    <ProgressBar Grid.Row="3" Height="25" Visibility="{Binding ProgressBarVisibility}"
                                 Value="{Binding PercentsDone}"/>

                </Grid>

            </TabItem>

        </TabControl>
            
    </Grid>
</CommonControls:PageControl>
